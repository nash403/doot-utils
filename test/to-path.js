const test = require('ava')
const toPath = require('../src/lib/helpers/to-path')

test('Test helper: toPath', t => {
  const check = (v, expected) => t.deepEqual(toPath(v), expected)
  check('d[0]', ['d', 0])
  check('d.1', ['d', '1'])
  check('a.b.c', ['a', 'b', 'c'])
  check('a..c', ['a', '', 'c'])
  check('a[].c', ['a', '', 'c'])
  check('a.[].c', ['a', '', '', 'c'])
  check('a.e[0].f', ['a', 'e', 0, 'f'])
  check('a.e.0.f', ['a', 'e', '0', 'f'])
  check('a.b["prop.withdot"].c', ['a', 'b', 'prop.withdot', 'c'])
  check("a.b['prop.withdot'].c", ['a', 'b', 'prop.withdot', 'c'])
  check('a.b[prop.g]', ['a', 'b', 'prop', 'g'])
  check('a.b["prop"].g', ['a', 'b', 'prop', 'g'])
  check("a.b['prop'].g", ['a', 'b', 'prop', 'g'])
  check("a.b.'prop'.g", ['a', 'b', "'prop'", 'g'])
  check('a.b."prop".g', ['a', 'b', '"prop"', 'g'])
  check('', [])
  check(['a', 'b', '"prop"', 'g'], ['a', 'b', '"prop"', 'g'])
  check([], [])
  check(5, [5])
  check(undefined, ['undefined'])
  check(null, ['null'])
  check(true, ['true'])
  check(false, ['false'])
  check({}, ['object Object'])
})
